# encoding: utf-8
__author__ = "Vladimir Roncevic"
__copyright__ = "Copyright ${year}, Free software to use and distributed it."
__credits__ = ["Vladimir Roncevic"]
__license__ = "GNU General Public License (GPL)"
__version__ = "1.0.0"
__maintainer__ = "Vladimir Roncevic"
__email__ = "elektron.ronca@gmail.com"
__status__ = "Updated"

from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy import Column, Integer, DateTime

ModelBase = declarative_base()

class Base(ModelBase):
	"""
	Define class Base with attribute(s) and method(s).
	Abstract Data Model.
	It defines:
		attribute:
			id - Table id
			created - Date of creation
			modified - Date of modification
		method:
			None
	"""

	__abstract__ = True

	id = Column(Integer, primary_key=True, autoincrement=True)
	created = Column(DateTime, nullable=False)
	modified = Column(DateTime, nullable=False)

